y = "Mean ETa (mm)",
fill = "Model") +
theme_bw() +
scale_fill_manual(values = model_color) +  # Set colors manually
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5),
strip.text = element_text(size = 10)) + # Adjust the size of y-axis title
facet_wrap(~LandUse, scales = "free_y", ncol = 1, labeller = labeller(LandUse = setNames(LU_names, 1:5)))
mean_LU
ggsave(mean_LU, filename = paste(path_plots, "/mean_LU.png", sep = ""),
width = 3200, height = 2500, units = "px")
### END
##############################################################################################
##############################################################################################
## Next Take:
# PLot for each Model a Land Use differentiated Mean Plot
shape_mapping <- c("Agriculture" = 16, "Bare Soil" = 20, "Grassland" = 18, "Urban Area" = 15, "Forest" = 17)
# Define custom colors for LandUse_name factors
land_use_colors <- c("Agriculture" =  "#F0E442", "Bare Soil" = "#616161", "Grassland" = "lightgreen", "Urban Area" ="#DC697D", "Forest" =  "#337538")
LU_pivot_df %>%
filter(model == "SEBAL") %>%
ggplot(aes(x = date, y = mean, color = LandUse_name, shape = LandUse_name, group = LandUse_name)) +
geom_point(size = 7) +
geom_line() +
labs(title = "SEBAL Mean ETa per Land Use",
x = "Date",
y = "Mean ETa (mm)",
color = "Land Use",
shape = "Land Use") +
theme_bw() +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
scale_color_manual(values = land_use_colors) +  # Set custom colors for LandUse_name
theme(axis.title.x = element_text(size = 12.5),
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5))
ggsave(mean_points, filename = paste(path_plots, "/mean_points.png", sep = ""),
width = 3212, height = 1942, units = "px")
shape_mapping <- c("Agriculture" = 16, "Bare Soil" = 20, "Grassland" = 18, "Urban Area" = 15, "Forest" = 17)
# Define custom colors for LandUse_name factors
land_use_colors <- c("Agriculture" =  "#F0E442", "Bare Soil" = "#616161", "Grassland" = "lightgreen", "Urban Area" ="#DC697D", "Forest" =  "#337538")
SEBAL_LU <- LU_pivot_df %>%
filter(model == "SEBAL") %>%
ggplot(aes(x = date, y = mean, color = LandUse_name, shape = LandUse_name, group = LandUse_name)) +
geom_point(size = 7) +
geom_line() +
labs(title = "SEBAL Mean ETa per Land Use",
x = "Date",
y = "Mean ETa (mm)",
color = "Land Use",
shape = "Land Use") +
theme_bw() +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
scale_color_manual(values = land_use_colors) +  # Set custom colors for LandUse_name
theme(axis.title.x = element_text(size = 12.5),
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5))
ggsave(SEBAL_LU, filename = paste(path_plots, "/SEBAL_LU.png", sep = ""),
width = 3212, height = 1942, units = "px")
######
SSEB_LU <- LU_pivot_df %>%
filter(model == "SSEB") %>%
ggplot(aes(x = date, y = mean, color = LandUse_name, shape = LandUse_name, group = LandUse_name)) +
geom_point(size = 7) +
geom_line() +
labs(title = "SSEB Mean ETa per Land Use",
x = "Date",
y = "Mean ETa (mm)",
color = "Land Use",
shape = "Land Use") +
theme_bw() +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
scale_color_manual(values = land_use_colors) +  # Set custom colors for LandUse_name
theme(axis.title.x = element_text(size = 12.5),
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5))
ggsave(SSEB_LU, filename = paste(path_plots, "/SSEB_LU.png", sep = ""),
width = 3212, height = 1942, units = "px")
######
METRIC_LU <- LU_pivot_df %>%
filter(model == "METRIC") %>%
ggplot(aes(x = date, y = mean, color = LandUse_name, shape = LandUse_name, group = LandUse_name)) +
geom_point(size = 7) +
geom_line() +
labs(title = "METRIC Mean ETa per Land Use",
x = "Date",
y = "Mean ETa (mm)",
color = "Land Use",
shape = "Land Use") +
theme_bw() +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
scale_color_manual(values = land_use_colors) +  # Set custom colors for LandUse_name
theme(axis.title.x = element_text(size = 12.5),
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5))
ggsave(METRIC_LU, filename = paste(path_plots, "/METRIC_LU.png", sep = ""),
width = 3212, height = 1942, units = "px")
#######
WASIM_LU <- LU_pivot_df %>%
filter(model == "WASIM") %>%
ggplot(aes(x = date, y = mean, color = LandUse_name, shape = LandUse_name, group = LandUse_name)) +
geom_point(size = 7) +
geom_line() +
labs(title = "WASIM Mean ETa per Land Use",
x = "Date",
y = "Mean ETa (mm)",
color = "Land Use",
shape = "Land Use") +
theme_bw() +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
scale_color_manual(values = land_use_colors) +  # Set custom colors for LandUse_name
theme(axis.title.x = element_text(size = 12.5),
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5))
ggsave(WASIM_LU, filename = paste(path_plots, "/WASIM_LU.png", sep = ""),
width = 3212, height = 1942, units = "px")
# Define custom colors for LandUse_name factors
#land_use_colors <- c("Agriculture" =  "#F0E442", "Bare Soil" = "#616161", "Grassland" = "lightgreen", "Urban Area" ="#DC697D", "Forest" =  "#337538")
# Viridis Adaption
land_use_colors <- c("Agriculture" =  "#FDE725FF", "Bare Soil" = "#616161", "Grassland" = "#7AD151FF", "Urban Area" ="#DC697D", "Forest" =  "#337538")
SEBAL_LU <- LU_pivot_df %>%
filter(model == "SEBAL") %>%
ggplot(aes(x = date, y = mean, color = LandUse_name, shape = LandUse_name, group = LandUse_name)) +
geom_point(size = 7) +
geom_line() +
labs(title = "SEBAL Mean ETa per Land Use",
x = "Date",
y = "Mean ETa (mm)",
color = "Land Use",
shape = "Land Use") +
theme_bw() +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
scale_color_manual(values = land_use_colors) +  # Set custom colors for LandUse_name
theme(axis.title.x = element_text(size = 12.5),
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5))
SEBAL_LU
ggsave(SEBAL_LU, filename = paste(path_plots, "/SEBAL_LU.png", sep = ""),
width = 3212, height = 1942, units = "px")
SSEB_LU <- LU_pivot_df %>%
filter(model == "SSEB") %>%
ggplot(aes(x = date, y = mean, color = LandUse_name, shape = LandUse_name, group = LandUse_name)) +
geom_point(size = 7) +
geom_line() +
labs(title = "SSEB Mean ETa per Land Use",
x = "Date",
y = "Mean ETa (mm)",
color = "Land Use",
shape = "Land Use") +
theme_bw() +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
scale_color_manual(values = land_use_colors) +  # Set custom colors for LandUse_name
theme(axis.title.x = element_text(size = 12.5),
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5))
ggsave(SSEB_LU, filename = paste(path_plots, "/SSEB_LU.png", sep = ""),
width = 3212, height = 1942, units = "px")
######
METRIC_LU <- LU_pivot_df %>%
filter(model == "METRIC") %>%
ggplot(aes(x = date, y = mean, color = LandUse_name, shape = LandUse_name, group = LandUse_name)) +
geom_point(size = 7) +
geom_line() +
labs(title = "METRIC Mean ETa per Land Use",
x = "Date",
y = "Mean ETa (mm)",
color = "Land Use",
shape = "Land Use") +
theme_bw() +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
scale_color_manual(values = land_use_colors) +  # Set custom colors for LandUse_name
theme(axis.title.x = element_text(size = 12.5),
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5))
ggsave(METRIC_LU, filename = paste(path_plots, "/METRIC_LU.png", sep = ""),
width = 3212, height = 1942, units = "px")
#######
WASIM_LU <- LU_pivot_df %>%
filter(model == "WASIM") %>%
ggplot(aes(x = date, y = mean, color = LandUse_name, shape = LandUse_name, group = LandUse_name)) +
geom_point(size = 7) +
geom_line() +
labs(title = "WASIM Mean ETa per Land Use",
x = "Date",
y = "Mean ETa (mm)",
color = "Land Use",
shape = "Land Use") +
theme_bw() +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
scale_color_manual(values = land_use_colors) +  # Set custom colors for LandUse_name
theme(axis.title.x = element_text(size = 12.5),
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5))
ggsave(WASIM_LU, filename = paste(path_plots, "/WASIM_LU.png", sep = ""),
width = 3212, height = 1942, units = "px")
library(tidyverse)
library(raster)
library(lubridate)
library(viridis)
library(sf)
library(scico)
library(gridExtra)
### DATES without 2020-03
date_list = c("2015-04-15",
"2015-07-04",
"2016-09-08",
"2016-09-24",
"2017-04-20",
"2018-04-07",
"2018-09-30",
"2019-06-29",
"2020-03-27",
"2020-09-19")
### LOAD DATA
path_data = "D:/Nicolas_D/Geodaten/Masterarbeit/DATA_MesoHyd_MA-SEBAL/" # Path data NICOLAS-PC
#path_combined_data = paste(path_data, "Processed/export/combined_data/combined_", date_SSEB, ".csv", sep = "")
path_LU = "D:/Nicolas_D/Geodaten/Masterarbeit/DATA_MesoHyd_MA-SEBAL/Processed/study_area/LU_raster_combined.csv"
LU = read.csv(path_LU)
path_plots = paste(path_data, "Processed/export/R_plots/General", sep = "")
path_tables = paste(path_data, "Processed/export/R_tables", sep = "")
data_frames_list <- list()
for (date_str in date_list) {
# Convert date string to Date object
date <- as.Date(date_str, format = "%Y-%m-%d")
# Convert date to the desired formats
date_SSEB <- format(date, "%Y_%m_%d") %>%
str_replace_all("-", "_")
# Create file path
path_combined_data <- paste(path_data, "Processed/export/combined_data/combined_", date_SSEB, ".csv", sep = "")
# Read CSV file into a data frame
df_name <- date_str
assign(df_name, read.csv(path_combined_data))
# Store the data frame in the list
data_frames_list[[df_name]] <- get(df_name)
}
# Add a NA-column to data frame of 2020-03-27 to make it compatible with the others
data_frames_list$`2020-03-27` <-  cbind(data_frames_list$`2020-03-27`, c(NA))
colnames(data_frames_list$`2020-03-27`) <-  c("x", "y", "SEBAL", "METRIC", "WASIM", "diff_METRIC", "diff_WASIM", "SSEB")
### CREATE TIME SERIES DataFrames
SEBAL_ts = data.frame(x = `2015-04-15`$x, y = `2015-04-15`$y, LandUse = LU$values)
SSEB_ts = data.frame(x = `2015-04-15`$x, y = `2015-04-15`$y, LandUse = LU$values)
METRIC_ts = data.frame(x = `2015-04-15`$x, y = `2015-04-15`$y, LandUse = LU$values)
WASIM_ts = data.frame(x = `2015-04-15`$x, y = `2015-04-15`$y, LandUse = LU$values)
for (i in data_frames_list) {
# Append columns to respective data frames
SEBAL_ts <- cbind(SEBAL_ts, i$SEBAL)
SSEB_ts <- cbind(SSEB_ts, i$SSEB)
METRIC_ts <- cbind(METRIC_ts, i$METRIC)
WASIM_ts <- cbind(WASIM_ts, i$WASIM)
}
columns = c("x", "y", "LandUse",
"2015-04-15",
"2015-07-04",
"2016-09-08",
"2016-09-24",
"2017-04-20",
"2018-04-07",
"2018-09-30",
"2019-06-29",
"2020-03-27",
"2020-09-19")
colnames(SEBAL_ts) <- columns
colnames(SSEB_ts) <- columns
colnames(METRIC_ts) <- columns
colnames(WASIM_ts) <- columns
### CALCULATE MEANS and SD All Land Use
means_SEBAL <- apply(SEBAL_ts[, 4:13], 2, mean, na.rm = TRUE)
means_SSEB <- apply(SSEB_ts[, 4:13], 2, mean, na.rm = TRUE)
means_METRIC <- apply(METRIC_ts[, 4:13], 2, mean, na.rm = TRUE)
means_WASIM <- apply(WASIM_ts[, 4:13], 2, mean, na.rm = TRUE)
sds_SEBAL <- apply(SEBAL_ts[, 4:13], 2, sd, na.rm = TRUE)
sds_SSEB <- apply(SSEB_ts[, 4:13], 2, sd, na.rm = TRUE)
sds_METRIC <- apply(METRIC_ts[, 4:13], 2, sd, na.rm = TRUE)
sds_WASIM <- apply(WASIM_ts[, 4:13], 2, sd, na.rm = TRUE)
means_df = data.frame("date" = date_list)
means_df = cbind(means_df, means_SEBAL)
means_df = cbind(means_df, means_SSEB)
means_df = cbind(means_df, means_METRIC)
means_df = cbind(means_df, means_WASIM)
sd_df = data.frame("date" = date_list)
sd_df = cbind(sd_df, sds_SEBAL)
sd_df = cbind(sd_df, sds_SSEB)
sd_df = cbind(sd_df, sds_METRIC)
sd_df = cbind(sd_df, sds_WASIM)
# Coefficient of Variation Table
cv_df <- means_df
cv_df[,2:5] <- (sd_df[,2:5] / means_df[,2:5])*100
pivot_means_df = pivot_longer(means_df, cols = 2:5)
pivot_sd_df = pivot_longer(sd_df, cols = 2:5)
pivot_cv_df <- pivot_longer(cv_df, cols = 2:5)
pivot_df = cbind(pivot_means_df, pivot_sd_df$value, pivot_cv_df$value)
colnames(pivot_df) = c("date", "name", "mean", "sd", "CV")
pivot_df = pivot_df %>%
mutate(name = str_replace(name, "means_SEBAL", "SEBAL")) %>%
mutate(name = str_replace(name, "means_SSEB", "SSEB")) %>%
mutate(name = str_replace(name, "means_METRIC", "METRIC")) %>%
mutate(name = str_replace(name, "means_WASIM", "WASIM"))
pivot_df$name <- factor(pivot_df$name,
levels = c("SEBAL", "SSEB", "METRIC", "WASIM"))
LUm_SEBAL <- aggregate(SEBAL_ts[, 4:13], list(SEBAL_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SEBAL"))
LUm_SSEB <- aggregate(SSEB_ts[, 4:13], list(SSEB_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SSEB"))
LUm_METRIC <- aggregate(METRIC_ts[, 4:13], list(METRIC_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("METRIC"))
LUm_WASIM <- aggregate(WASIM_ts[, 4:13], list(WASIM_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("WASIM"))
LUsd_SEBAL <- aggregate(SEBAL_ts[, 4:13], list(SEBAL_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SEBAL"))
LUsd_SSEB <- aggregate(SSEB_ts[, 4:13], list(SSEB_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SSEB"))
LUsd_METRIC <- aggregate(METRIC_ts[, 4:13], list(METRIC_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("METRIC"))
LUsd_WASIM <- aggregate(WASIM_ts[, 4:13], list(WASIM_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("WASIM"))
LU_mean <- c("LUm_SEBAL", "LUm_SSEB", "LUm_METRIC", "LUm_WASIM")
LU_sd <- c("LUsd_SEBAL", "LUsd_SSEB", "LUsd_METRIC", "LUsd_WASIM")
for(df in LU_mean) {
df.tmp <- get(df)
names(df.tmp) <- c("LandUse", "date", "mean", "model")
assign(df, df.tmp)
}
for(df in LU_sd) {
df.tmp <- get(df)
names(df.tmp) <- c("LandUse", "date", "sd", "model")
assign(df, df.tmp)
}
LU_mean_combined <- bind_rows(LUm_SEBAL, LUm_SSEB, LUm_METRIC, LUm_WASIM)
LU_sd_combined <- bind_rows(LUsd_SEBAL, LUsd_SSEB, LUsd_METRIC, LUsd_WASIM)
## Add Strings of Land use Class
string_vector <- c("Agriculture", "Bare Soil", "Grassland", "Urban Area", "Forest")
LU_mean_combined <- LU_mean_combined %>%
mutate(LandUse_name = case_when(
LandUse == 1 ~ string_vector[1],
LandUse == 2 ~ string_vector[2],
LandUse == 3 ~ string_vector[3],
LandUse == 4 ~ string_vector[4],
LandUse == 5 ~ string_vector[5]
))
############################################################
## TEST: Inserting a t-test matrix
multi.ttest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 1
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
test <- t.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- test$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
signif(p.mat,4)
}
multi.ttest(LU_mean_combined)
LU_mean_combined
LU_mean_combined[1:3]
multi.ttest(LLU_mean_combined[1:3])
multi.ttest(LU_mean_combined[1:3])
library(tidyverse)
library(raster)
library(lubridate)
library(viridis)
library(sf)
library(scico)
library(gridExtra)
### DATES without 2020-03
date_list = c("2015-04-15",
"2015-07-04",
"2016-09-08",
"2016-09-24",
"2017-04-20",
"2018-04-07",
"2018-09-30",
"2019-06-29",
"2020-03-27",
"2020-09-19")
### LOAD DATA
path_data = "D:/Nicolas_D/Geodaten/Masterarbeit/DATA_MesoHyd_MA-SEBAL/" # Path data NICOLAS-PC
#path_combined_data = paste(path_data, "Processed/export/combined_data/combined_", date_SSEB, ".csv", sep = "")
path_LU = "D:/Nicolas_D/Geodaten/Masterarbeit/DATA_MesoHyd_MA-SEBAL/Processed/study_area/LU_raster_combined.csv"
LU = read.csv(path_LU)
path_plots = paste(path_data, "Processed/export/R_plots/General", sep = "")
path_tables = paste(path_data, "Processed/export/R_tables", sep = "")
data_frames_list <- list()
for (date_str in date_list) {
# Convert date string to Date object
date <- as.Date(date_str, format = "%Y-%m-%d")
# Convert date to the desired formats
date_SSEB <- format(date, "%Y_%m_%d") %>%
str_replace_all("-", "_")
# Create file path
path_combined_data <- paste(path_data, "Processed/export/combined_data/combined_", date_SSEB, ".csv", sep = "")
# Read CSV file into a data frame
df_name <- date_str
assign(df_name, read.csv(path_combined_data))
# Store the data frame in the list
data_frames_list[[df_name]] <- get(df_name)
}
# Add a NA-column to data frame of 2020-03-27 to make it compatible with the others
data_frames_list$`2020-03-27` <-  cbind(data_frames_list$`2020-03-27`, c(NA))
colnames(data_frames_list$`2020-03-27`) <-  c("x", "y", "SEBAL", "METRIC", "WASIM", "diff_METRIC", "diff_WASIM", "SSEB")
### CREATE TIME SERIES DataFrames
SEBAL_ts = data.frame(x = `2015-04-15`$x, y = `2015-04-15`$y, LandUse = LU$values)
SSEB_ts = data.frame(x = `2015-04-15`$x, y = `2015-04-15`$y, LandUse = LU$values)
METRIC_ts = data.frame(x = `2015-04-15`$x, y = `2015-04-15`$y, LandUse = LU$values)
WASIM_ts = data.frame(x = `2015-04-15`$x, y = `2015-04-15`$y, LandUse = LU$values)
for (i in data_frames_list) {
# Append columns to respective data frames
SEBAL_ts <- cbind(SEBAL_ts, i$SEBAL)
SSEB_ts <- cbind(SSEB_ts, i$SSEB)
METRIC_ts <- cbind(METRIC_ts, i$METRIC)
WASIM_ts <- cbind(WASIM_ts, i$WASIM)
}
columns = c("x", "y", "LandUse",
"2015-04-15",
"2015-07-04",
"2016-09-08",
"2016-09-24",
"2017-04-20",
"2018-04-07",
"2018-09-30",
"2019-06-29",
"2020-03-27",
"2020-09-19")
colnames(SEBAL_ts) <- columns
colnames(SSEB_ts) <- columns
colnames(METRIC_ts) <- columns
colnames(WASIM_ts) <- columns
### CALCULATE MEANS and SD All Land Use
means_SEBAL <- apply(SEBAL_ts[, 4:13], 2, mean, na.rm = TRUE)
means_SSEB <- apply(SSEB_ts[, 4:13], 2, mean, na.rm = TRUE)
means_METRIC <- apply(METRIC_ts[, 4:13], 2, mean, na.rm = TRUE)
means_WASIM <- apply(WASIM_ts[, 4:13], 2, mean, na.rm = TRUE)
sds_SEBAL <- apply(SEBAL_ts[, 4:13], 2, sd, na.rm = TRUE)
sds_SSEB <- apply(SSEB_ts[, 4:13], 2, sd, na.rm = TRUE)
sds_METRIC <- apply(METRIC_ts[, 4:13], 2, sd, na.rm = TRUE)
sds_WASIM <- apply(WASIM_ts[, 4:13], 2, sd, na.rm = TRUE)
means_df = data.frame("date" = date_list)
means_df = cbind(means_df, means_SEBAL)
means_df = cbind(means_df, means_SSEB)
means_df = cbind(means_df, means_METRIC)
means_df = cbind(means_df, means_WASIM)
sd_df = data.frame("date" = date_list)
sd_df = cbind(sd_df, sds_SEBAL)
sd_df = cbind(sd_df, sds_SSEB)
sd_df = cbind(sd_df, sds_METRIC)
sd_df = cbind(sd_df, sds_WASIM)
# Coefficient of Variation Table
cv_df <- means_df
cv_df[,2:5] <- (sd_df[,2:5] / means_df[,2:5])*100
pivot_means_df = pivot_longer(means_df, cols = 2:5)
pivot_sd_df = pivot_longer(sd_df, cols = 2:5)
pivot_cv_df <- pivot_longer(cv_df, cols = 2:5)
pivot_df = cbind(pivot_means_df, pivot_sd_df$value, pivot_cv_df$value)
colnames(pivot_df) = c("date", "name", "mean", "sd", "CV")
pivot_df = pivot_df %>%
mutate(name = str_replace(name, "means_SEBAL", "SEBAL")) %>%
mutate(name = str_replace(name, "means_SSEB", "SSEB")) %>%
mutate(name = str_replace(name, "means_METRIC", "METRIC")) %>%
mutate(name = str_replace(name, "means_WASIM", "WASIM"))
pivot_df$name <- factor(pivot_df$name,
levels = c("SEBAL", "SSEB", "METRIC", "WASIM"))
