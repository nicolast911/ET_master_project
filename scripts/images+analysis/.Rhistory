geom_point(size = 5) +
geom_line() +
labs(title = "ETa Mean per Date",
x = "Date",
y = "Mean ETa (mm)",
color = "Model",
shape = "Model") +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
theme_bw()
ggplot(pivot_df, aes(x = date, y = mean, color = name, shape = name, group = name)) +
geom_point(size = 5) +
geom_line() +
labs(title = "ETa Mean per Date",
x = "Date",
y = "Mean ETa (mm)",
color = "Model",
shape = "Model") +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)) # Adjust the size of y-axis title
ggplot(pivot_df, aes(x = date, y = mean, color = name, shape = name, group = name)) +
geom_point(size = 5) +
geom_line() +
labs(title = "ETa Mean per Date",
x = "Date",
y = "Mean ETa (mm)",
color = "Model",
shape = "Model") +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text=element_text(size = 10)) # Adjust the size of y-axis title
ggplot(pivot_df, aes(x = date, y = mean, color = name, shape = name, group = name)) +
geom_point(size = 5) +
geom_line() +
labs(title = "ETa Mean per Date",
x = "Date",
y = "Mean ETa (mm)",
color = "Model",
shape = "Model") +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10)) # Adjust the size of y-axis title
ggplot(pivot_df, aes(x = date, y = mean, color = name, shape = name, group = name)) +
geom_point(size = 5) +
geom_line() +
labs(title = "ETa Mean per Date",
x = "Date",
y = "Mean ETa (mm)",
color = "Model",
shape = "Model") +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5)) # Adjust the size of y-axis title
### BarPlot With Errorbar
ggplot(pivot_df, aes(x=date, y=mean, fill=name)) +
geom_col(position=position_dodge()) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,
position=position_dodge(0.9)) +
labs(title = "ETa Mean and SD per Date",
x = "Date",
y = "Mean ETa (mm)",
fill = "Model") +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5)) # Adjust the size of y-axis title
ggplot(pivot_df, aes(x = date, y = mean, color = name, shape = name, group = name)) +
geom_point(size = 5) +
geom_line() +
labs(title = "ETa Mean per Date",
x = "Date",
y = "Mean ETa (mm)",
color = "Model",
shape = "Model") +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5)) # Adjust the size of y-axis title
### BarPlot With Errorbar
ggplot(pivot_df, aes(x=date, y=mean, fill=name)) +
geom_col(position=position_dodge()) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,
position=position_dodge(0.9)) +
labs(title = "ETa Mean and SD per Date",
x = "Date",
y = "Mean ETa (mm)",
fill = "Model") +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5)) # Adjust the size of y-axis title
path_plots = paste(path_data, "Processed/export/R_plots/General")
### BarPlot With Errorbar
mean_bars <- ggplot(pivot_df, aes(x=date, y=mean, fill=name)) +
geom_col(position=position_dodge()) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,
position=position_dodge(0.9)) +
labs(title = "ETa Mean and SD per Date",
x = "Date",
y = "Mean ETa (mm)",
fill = "Model") +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5)) # Adjust the size of y-axis title
ggsave(mean_bars, filename = paste(path_plots, "/mean_bars2.png"),
width = 1606, height = 971, units = "px")
paste(path_plots, "/mean_bars2.png")
path_plots = paste(path_data, "Processed/export/R_plots/General", sep = "")
ggsave(mean_bars, filename = paste(path_plots, "/mean_bars2.png", sep = ""),
width = 1606, height = 971, units = "px")
ggsave(mean_bars, filename = paste(path_plots, "/mean_bars2.png", sep = ""),
width = 1000, height = 500, units = "px")
ggsave(mean_bars, filename = paste(path_plots, "/mean_bars2.png", sep = ""),
width = 3212, height = 1942, units = "px")
mean_points <- ggplot(pivot_df, aes(x = date, y = mean, color = name, shape = name, group = name)) +
geom_point(size = 5) +
geom_line() +
labs(title = "ETa Mean per Date",
x = "Date",
y = "Mean ETa (mm)",
color = "Model",
shape = "Model") +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5)) # Adjust the size of y-axis title
ggsave(mean_points, filename = paste(path_plots, "/mean_points.png", sep = ""),
width = 3212, height = 1942, units = "px")
### BarPlot With Errorbar
mean_bars <- ggplot(pivot_df, aes(x=date, y=mean, fill=name)) +
geom_col(position=position_dodge()) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,
position=position_dodge(0.9)) +
labs(title = "ETa Mean and SD per Date",
x = "Date",
y = "Mean ETa (mm)",
fill = "Model") +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5)) # Adjust the size of y-axis title
ggsave(mean_bars, filename = paste(path_plots, "/mean_bars.png", sep = ""),
width = 3212, height = 1942, units = "px")
### BarPlot With Errorbar
mean_bars <- ggplot(pivot_df, aes(x=date, y=mean, fill=name)) +
geom_col(position=position_dodge()) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,
position=position_dodge(0.9)) +
labs(title = "ETa Mean and SD per Date",
x = "Date",
y = "Mean ETa (mm)",
fill = "Model") +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5)) # Adjust the size of y-axis title
ggsave(mean_bars, filename = paste(path_plots, "/mean_bars.png", sep = ""),
width = 3212, height = 1942, units = "px")
mean_points <- ggplot(pivot_df, aes(x = date, y = mean, color = name, shape = name, group = name)) +
geom_point(size = 5) +
geom_line() +
labs(title = "ETa Mean per Date",
x = "Date",
y = "Mean ETa (mm)",
color = "Model",
shape = "Model") +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5)) # Adjust the size of y-axis title
ggsave(mean_points, filename = paste(path_plots, "/mean_points.png", sep = ""),
width = 3212, height = 1942, units = "px")
LUm_SEBAL <- aggregate(SEBAL_ts[, 4:13], list(SEBAL_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SEBAL"))
LUm_SSEB <- aggregate(SSEB_ts[, 4:13], list(SSEB_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SSEB"))
LUm_METRIC <- aggregate(METRIC_ts[, 4:13], list(METRIC_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("METRIC"))
LUm_WASIM <- aggregate(WASIM_ts[, 4:13], list(WASIM_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("WASIM"))
LUsd_SEBAL <- aggregate(SEBAL_ts[, 4:13], list(SEBAL_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SEBAL"))
LUsd_SSEB <- aggregate(SSEB_ts[, 4:13], list(SSEB_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SSEB"))
LUsd_METRIC <- aggregate(METRIC_ts[, 4:13], list(METRIC_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("METRIC"))
LUsd_WASIM <- aggregate(WASIM_ts[, 4:13], list(WASIM_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("WASIM"))
LU_mean <- c("LUm_SEBAL", "LUm_SSEB", "LUm_METRIC", "LUm_WASIM")
LU_sd <- c("LUsd_SEBAL", "LUsd_SSEB", "LUsd_METRIC", "LUsd_WASIM")
for(df in LU_mean) {
df.tmp <- get(df)
names(df.tmp) <- c("LandUse", "date", "mean", "model")
assign(df, df.tmp)
}
for(df in LU_sd) {
df.tmp <- get(df)
names(df.tmp) <- c("LandUse", "date", "sd", "model")
assign(df, df.tmp)
}
LU_mean_combined <- bind_rows(LUm_SEBAL, LUm_SSEB, LUm_METRIC, LUm_WASIM)
LU_sd_combined <- bind_rows(LUsd_SEBAL, LUsd_SSEB, LUsd_METRIC, LUsd_WASIM)
LU_pivot_df = cbind(LU_mean_combined, LU_sd_combined$sd)
colnames(LU_pivot_df) = c("LandUse", "date", "mean", "model", "sd")
LU_pivot_df = LU_pivot_df[,c(2, 4, 1, 3, 5)]
# Add Land Use names for eacht factor
LU_names <- c("Agriculture", "Bare Soil", "Grassland", "Urban Area", "Forest")
# Factor 1 - Agri
LU_pivot_df %>%
filter(LandUse == 1) %>%
ggplot(aes(x = date, y = mean, color = model)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# All Factors - 5 Subplots
LU_pivot_df %>%
filter(LandUse %in% 1:5) %>%
ggplot(aes(x = date, y = mean, color = model, group = model)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~LandUse, scales = "free_y", ncol = 1, labeller = labeller(LandUse = setNames(LU_names, 1:5)))
# All Factors - 5 Subplots - REVISION
LU_pivot_df %>%
filter(LandUse %in% 1:5) %>%
ggplot(aes(x = date, y = mean, color = model, group = model)) +
geom_col(position=position_dodge()) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,
position=position_dodge(0.9)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~LandUse, scales = "free_y", ncol = 1, labeller = labeller(LandUse = setNames(LU_names, 1:5)))
# All Factors - 5 Subplots - REVISION
LU_pivot_df %>%
filter(LandUse %in% 1:5) %>%
ggplot(aes(x = date, y = mean, color = model)) +
geom_col(position=position_dodge()) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,
position=position_dodge(0.9)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~LandUse, scales = "free_y", ncol = 1, labeller = labeller(LandUse = setNames(LU_names, 1:5)))
, group = model
# All Factors - 5 Subplots - REVISION
LU_pivot_df %>%
filter(LandUse %in% 1:5) %>%
ggplot(aes(x = date, y = mean, color = model, group = model)) +
geom_col(position=position_dodge()) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,
position=position_dodge(0.9)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~LandUse, scales = "free_y", ncol = 1, labeller = labeller(LandUse = setNames(LU_names, 1:5)))
# All Factors - 5 Subplots - REVISION
LU_pivot_df %>%
filter(LandUse %in% 1:5) %>%
ggplot(aes(x = date, y = mean, color = model, group = model)) +
geom_col(position=position_dodge()) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,
position=position_dodge(0.9)) +
labs(title = "ETa Mean and SD per Date",
x = "Date",
y = "Mean ETa (mm)",
fill = "Model") +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5)) + # Adjust the size of y-axis title
facet_wrap(~LandUse, scales = "free_y", ncol = 1, labeller = labeller(LandUse = setNames(LU_names, 1:5)))
# All Factors - 5 Subplots - REVISION
LU_pivot_df %>%
filter(LandUse %in% 1:5) %>%
ggplot(aes(x = date, y = mean, group = model)) +
geom_col(position=position_dodge()) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,
position=position_dodge(0.9)) +
labs(title = "ETa Mean and SD per Date",
x = "Date",
y = "Mean ETa (mm)",
fill = "Model") +
scale_shape_manual(values = shape_mapping) +  # Set shapes manually
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5)) + # Adjust the size of y-axis title
facet_wrap(~LandUse, scales = "free_y", ncol = 1, labeller = labeller(LandUse = setNames(LU_names, 1:5)))
# All Factors - 5 Subplots - REVISION
LU_pivot_df %>%
filter(LandUse %in% 1:5) %>%
ggplot(aes(x = date, y = mean, color = model, fill = model, group = model)) +
geom_col(position=position_dodge()) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,
position=position_dodge(0.9)) +
labs(title = "ETa Mean and SD per Date",
x = "Date",
y = "Mean ETa (mm)",
fill = "Model") +
scale_shape_manual(values = shape_mapping) +
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5)) +
facet_wrap(~LandUse, scales = "free_y", ncol = 1, labeller = labeller(LandUse = setNames(LU_names, 1:5)))
# All Factors - 5 Subplots - REVISION
LU_pivot_df %>%
filter(LandUse %in% 1:5) %>%
ggplot(aes(x = date, y = mean, color = model, group = model)) +
geom_col(position=position_dodge()) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,
position=position_dodge(0.9)) +
labs(title = "ETa Mean and SD per Date",
x = "Date",
y = "Mean ETa (mm)",
fill = "Model") +
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5)) + # Adjust the size of y-axis title
facet_wrap(~LandUse, scales = "free_y", ncol = 1, labeller = labeller(LandUse = setNames(LU_names, 1:5)))
# All Factors - 5 Subplots - REVISION
LU_pivot_df %>%
filter(LandUse %in% 1:5) %>%
ggplot(aes(x = date, y = mean, color = model, group = LandUse)) +
geom_col(position=position_dodge()) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,
position=position_dodge(0.9)) +
labs(title = "ETa Mean and SD per Date",
x = "Date",
y = "Mean ETa (mm)",
fill = "Model") +
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5)) + # Adjust the size of y-axis title
facet_wrap(~LandUse, scales = "free_y", ncol = 1, labeller = labeller(LandUse = setNames(LU_names, 1:5)))
# All Factors - 5 Subplots - REVISION
LU_pivot_df %>%
filter(LandUse %in% 1:5) %>%
ggplot(aes(x = date, y = mean, color = LandUse, group = model)) +
geom_col(position=position_dodge()) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,
position=position_dodge(0.9)) +
labs(title = "ETa Mean and SD per Date",
x = "Date",
y = "Mean ETa (mm)",
fill = "Model") +
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5)) + # Adjust the size of y-axis title
facet_wrap(~LandUse, scales = "free_y", ncol = 1, labeller = labeller(LandUse = setNames(LU_names, 1:5)))
# All Factors - 5 Subplots - REVISION
LU_pivot_df %>%
filter(LandUse %in% 1:5) %>%
ggplot(aes(x = date, y = mean, color = model, group = model)) +
geom_col(position=position_dodge()) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=0.4,
position=position_dodge(0.9)) +
labs(title = "ETa Mean and SD per Date",
x = "Date",
y = "Mean ETa (mm)",
fill = "Model") +
theme_bw() +
theme(axis.title.x = element_text(size = 12.5),  # Adjust the size of x-axis title
axis.title.y = element_text(size = 12.5),
plot.title = element_text(size = 14.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12.5)) + # Adjust the size of y-axis title
facet_wrap(~LandUse, scales = "free_y", ncol = 1, labeller = labeller(LandUse = setNames(LU_names, 1:5)))
LU_pivot_df$model <- factor(LU_pivot_df$model,
levels = c("SEBAL", "SSEB", "METRIC", "WASIM"))
LU_pivot_df$LandUse <- factor(LU_pivot_df$LandUse,
levels = c("Agriculture", "Bare Soil", "Grassland", "Urban Area", "Forest"))
# Add Land Use names for eacht factor
LU_names <- c("Agriculture", "Bare Soil", "Grassland", "Urban Area", "Forest")
# Factor 1 - Agri
LU_pivot_df %>%
filter(LandUse == 1) %>%
ggplot(aes(x = date, y = mean, color = model)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
