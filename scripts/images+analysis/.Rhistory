METRIC_scatter <- ggplot(df, aes(x = SEBAL, y = METRIC)) +
geom_bin2d(bins = 900) +
scale_fill_viridis(option = "plasma") +
theme_bw() +
labs(x = "SEBAL",       # Set x-axis label to the column name of x-data
y = "METRIC",       # Set y-axis label to the column name of y-data
fill = "Count",              # Set legend title to "Count"
title = paste("SEBAL ~ METRIC", date_met)) +  # Set plot title
#coord_cartesian(xlim = c(0, max_val_METRIC), ylim = c(0, max_val_METRIC)) +  # Set axis limits AUTOMATICAL
coord_cartesian(xlim = c(0, 9), ylim = c(0, 9)) +                             # Set axis limits MANUAL
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red")  # Add 1:1 line
METRIC_scatter
ggsave(METRIC_scatter, filename = paste(path_plots, "/METRIC_scatter.png"))
########################
# WASIM
WASIM_scatter <- ggplot(df, aes(x = SEBAL, y = WASIM)) +
geom_bin2d(bins = 650) +
scale_fill_viridis(option = "plasma") +
theme_bw() +
labs(x = "SEBAL",       # Set x-axis label to the column name of x-data
y = "WASIM",       # Set y-axis label to the column name of y-data
fill = "Count",              # Set legend title to "Count"
title = paste("SEBAL ~ WASIM", date_met)) +  # Set plot title
coord_cartesian(xlim = c(0, max_val_WASIM), ylim = c(0, max_val_WASIM)) +  # Set axis limits AUTOMATICAL
#coord_cartesian(xlim = c(0, 4), ylim = c(0, 4)) +                           # Set axis limits MANUAL
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red")  # Add 1:1 line
WASIM_scatter
ggsave(WASIM_scatter, filename = paste(path_plots, "/WASIM_scatter.png"))
# Set date(s) of modeling/data retrieval
# date <- "2015-07-04"  # Initial LS Picture
date <- date_list[9]
date <- as.Date(date, format = "%Y-%m-%d")
# Date in meteo_raster_daily Path Format
date_met <- format(date, "%Y-%m-%d")
# Date in WASIM-Raster Path Format
date_wasim <- format(date, "%Y_%m_%d") %>%
str_replace_all("_0", "_") %>%
str_replace_all("_", "_")
# Date in ETp-FAO56-Raster Path Format
date_etp <- format(date, "%Y_%m_%d") %>%
str_replace_all("_0", "-") %>%
str_replace_all("_", "-")
# Date SSEB Format
date_SSEB <- format(date, "%Y_%m_%d") %>%
str_replace_all("-", "_")
# Date in Landsat Path Format
date_LS <- format(date, "%Y%m%d")
### LOAD DATA
path_data = "D:/Nicolas_D/Geodaten/Masterarbeit/DATA_MesoHyd_MA-SEBAL/" # Path data NICOLAS-PC
path_combined_data = paste(path_data, "Processed/export/combined_data/combined_", date_SSEB, ".csv", sep = "")
# Check if the combined CSV file already exists, else source the code to create a combined dataframe
if (file.exists(path_combined_data)) {
df <- read.csv(path_combined_data)
} else {
source("combine_data.R")
df <- read.csv(path_combined_data)
}
# Set date(s) of modeling/data retrieval
# date <- "2015-07-04"  # Initial LS Picture
date <- date_list[10]
date <- as.Date(date, format = "%Y-%m-%d")
# Date in meteo_raster_daily Path Format
date_met <- format(date, "%Y-%m-%d")
# Date in WASIM-Raster Path Format
date_wasim <- format(date, "%Y_%m_%d") %>%
str_replace_all("_0", "_") %>%
str_replace_all("_", "_")
# Date in ETp-FAO56-Raster Path Format
date_etp <- format(date, "%Y_%m_%d") %>%
str_replace_all("_0", "-") %>%
str_replace_all("_", "-")
# Date SSEB Format
date_SSEB <- format(date, "%Y_%m_%d") %>%
str_replace_all("-", "_")
# Date in Landsat Path Format
date_LS <- format(date, "%Y%m%d")
### LOAD DATA
path_data = "D:/Nicolas_D/Geodaten/Masterarbeit/DATA_MesoHyd_MA-SEBAL/" # Path data NICOLAS-PC
path_combined_data = paste(path_data, "Processed/export/combined_data/combined_", date_SSEB, ".csv", sep = "")
# Check if the combined CSV file already exists, else source the code to create a combined dataframe
if (file.exists(path_combined_data)) {
df <- read.csv(path_combined_data)
} else {
source("combine_data.R")
df <- read.csv(path_combined_data)
}
### PLOTS
path_plots = paste(path_data, "Processed/export/R_plots/", date_SSEB, sep="")
# Find maximum value of all four models to scale the colour gradient to the overall maximum
df_max <- df[, c("SEBAL", "SSEB", "METRIC", "WASIM")]
lapply(df_max, max, na.rm=TRUE)
max_val = max(df_max, na.rm = TRUE)
# Find max and min for Difference Rasters
df_diff = df[,c("diff_SSEB", "diff_METRIC", "diff_WASIM")]
diff_limits = c(min(df_diff, na.rm = TRUE), max(df_diff, na.rm = TRUE))
########################################
# SEBAL
SEBAL_raster <- ggplot(df, aes(x = x, y = y, fill = SEBAL)) +
geom_raster() +
scale_fill_viridis(option = "turbo", na.value = "transparent", direction = -1, limits = c(0, max_val)) +  # Inverse color fill gradient
theme_bw() +
coord_equal() +
labs(title = paste("SEBAL", date_met),
fill = "ETa (mm)") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
plot.margin = unit(c(0, 0, 0, 0), "cm"),  # Remove space around the figure
axis.title = element_blank())  # Remove axis Label
ggsave(SEBAL_raster, filename = paste(path_plots, "/SEBAL_raster.png"))
########################################
# SSEB
SSEB_raster <- ggplot(df, aes(x = x, y = y, fill = SSEB)) +
geom_raster() +
scale_fill_viridis(option="turbo", na.value = "transparent", direction = -1, limits = c(0, max_val)) +  # Inverse color fill gradient
theme_bw() +
coord_equal() +
labs(title = paste("SSEB", date_met),
fill = "ETa (mm)") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
plot.margin = unit(c(0, 0, 0, 0), "cm"),  # Remove space around the figure
axis.title = element_blank())  # Remove axis Label
ggsave(SSEB_raster, filename = paste(path_plots, "/SSEB_raster.png"))
SSEB_diff <- ggplot(df, aes(x = x, y = y, fill = diff_SSEB)) +
geom_raster() +
scale_fill_scico(palette = "vik", na.value = "transparent", midpoint = 0, limits = c(diff_limits[1], diff_limits[2])) +
theme_bw() +
coord_equal() +
labs(title = paste("Difference SEBAL-SSEB", date_met),
fill = "ETa (mm)") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
plot.margin = unit(c(0, 0, 0, 0), "cm"),  # Remove space around the figure
axis.title = element_blank())  # Remove axis Label
ggsave(SSEB_diff, filename = paste(path_plots, "/SSEB_diff.png"))
########################################
# METRIC
METRIC_raster <- ggplot(df, aes(x = x, y = y, fill = METRIC)) +
geom_raster() +
scale_fill_viridis(option="turbo", na.value = "transparent", direction = -1, limits = c(0, max_val)) +  # Inverse color fill gradient
theme_bw() +
coord_equal() +
labs(title = paste("METRIC", date_met),
fill = "ETa (mm)") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
plot.margin = unit(c(0, 0, 0, 0), "cm"),  # Remove space around the figure
axis.title = element_blank())  # Remove axis Label
ggsave(METRIC_raster, filename = paste(path_plots, "/METRIC_raster.png"))
METRIC_diff <- ggplot(df, aes(x = x, y = y, fill = diff_METRIC)) +
geom_raster() +
scale_fill_scico(palette = "vik", na.value = "transparent", midpoint = 0, limits = c(diff_limits[1], diff_limits[2])) +
theme_bw() +
coord_equal() +
labs(title = paste("Difference SEBAL-METRIC", date_met),
fill = "ETa (mm)") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
plot.margin = unit(c(0, 0, 0, 0), "cm"),  # Remove space around the figure
axis.title = element_blank())  # Remove axis Label
ggsave(METRIC_diff, filename = paste(path_plots, "/METRIC_diff.png"))
########################################
# WASIM
WASIM_raster <- ggplot(df, aes(x = x, y = y, fill = WASIM)) +
geom_raster() +
scale_fill_viridis(option="turbo", na.value = "transparent", direction = -1, limits = c(0, max_val)) +  # Inverse color fill gradient
theme_bw() +
coord_equal() +
labs(title = paste("WASIM", date_met),
fill = "ETa (mm)") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
plot.margin = unit(c(0, 0, 0, 0), "cm"),  # Remove space around the figure
axis.title = element_blank())  # Remove axis Label
ggsave(WASIM_raster, filename = paste(path_plots, "/WASIM_raster.png"))
WASIM_diff <- ggplot(df, aes(x = x, y = y, fill = diff_WASIM)) +
geom_raster() +
scale_fill_scico(palette = "vik", na.value = "transparent", midpoint = 0, limits = c(diff_limits[1], diff_limits[2])) +
theme_bw() +
coord_equal() +
labs(title = paste("Difference SEBAL-WASIM", date_met),
fill = "ETa (mm)") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
plot.margin = unit(c(0, 0, 0, 0), "cm"),  # Remove space around the figure
axis.title = element_blank())  # Remove axis Label
ggsave(WASIM_diff, filename = paste(path_plots, "/WASIM_diff.png"))
Set date(s) of modeling/data retrieval
# Set date(s) of modeling/data retrieval
# date <- "2015-07-04"  # Initial LS Picture
date <- date_list[10]
date <- as.Date(date, format = "%Y-%m-%d")
# Date in meteo_raster_daily Path Format
date_met <- format(date, "%Y-%m-%d")
# Date in WASIM-Raster Path Format
date_wasim <- format(date, "%Y_%m_%d") %>%
str_replace_all("_0", "_") %>%
str_replace_all("_", "_")
# Date in ETp-FAO56-Raster Path Format
date_etp <- format(date, "%Y_%m_%d") %>%
str_replace_all("_0", "-") %>%
str_replace_all("_", "-")
# Date SSEB Format
date_SSEB <- format(date, "%Y_%m_%d") %>%
str_replace_all("-", "_")
# Date in Landsat Path Format
date_LS <- format(date, "%Y%m%d")
### LOAD DATA
path_data = "D:/Nicolas_D/Geodaten/Masterarbeit/DATA_MesoHyd_MA-SEBAL/" # Path data NICOLAS-PC
path_combined_data = paste(path_data, "Processed/export/combined_data/combined_", date_SSEB, ".csv", sep = "")
# Check if the combined CSV file already exists, else source the code to create a combined dataframe
if (file.exists(path_combined_data)) {
df <- read.csv(path_combined_data)
} else {
source("combine_data.R")
df <- read.csv(path_combined_data)
}
### PLOTS
path_plots = paste(path_data, "Processed/export/R_plots/", date_SSEB, sep="")
# Number of bins with sqrt(n)
sqrt(length(na.omit(df$SEBAL)))
sqrt(length(na.omit(df$WASIM)))
# Maximum Limit of Plot axis
lapply(df_max, max, na.rm=TRUE)
df_max_SSEB <- df[, c("SEBAL", "SSEB")]
max_val_SSEB <-  max(df_max_SSEB, na.rm = TRUE)
df_max_METRIC <- df[, c("SEBAL", "METRIC")]
max_val_METRIC <-  max(df_max_METRIC , na.rm = TRUE)
df_max_WASIM <- df[, c("SEBAL", "WASIM")]
max_val_WASIM <-  max(df_max_WASIM, na.rm = TRUE)
### SCATTERPLOT  # 2D Hist/Density scatter
########################
# SSEB
SSEB_scatter <- ggplot(df, aes(x = SEBAL, y = SSEB)) +
geom_bin2d(bins = 900) +
scale_fill_viridis(option = "plasma") +
theme_bw() +
labs(x = "SEBAL",       # Set x-axis label to the column name of x-data
y = "SSEB",       # Set y-axis label to the column name of y-data
fill = "Count",              # Set legend title to "Count"
title = paste("SEBAL ~ SSEB", date_met)) +  # Set plot title
coord_cartesian(xlim = c(0, max_val_SSEB), ylim = c(0, max_val_SSEB)) +  # Set axis limits
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red")  # Add 1:1 line
SSEB_scatter
ggsave(SSEB_scatter, filename = paste(path_plots, "/SSEB_scatter.png"))
########################
# METRIC
METRIC_scatter <- ggplot(df, aes(x = SEBAL, y = METRIC)) +
geom_bin2d(bins = 900) +
scale_fill_viridis(option = "plasma") +
theme_bw() +
labs(x = "SEBAL",       # Set x-axis label to the column name of x-data
y = "METRIC",       # Set y-axis label to the column name of y-data
fill = "Count",              # Set legend title to "Count"
title = paste("SEBAL ~ METRIC", date_met)) +  # Set plot title
#coord_cartesian(xlim = c(0, max_val_METRIC), ylim = c(0, max_val_METRIC)) +  # Set axis limits AUTOMATICAL
coord_cartesian(xlim = c(0, 9), ylim = c(0, 9)) +                             # Set axis limits MANUAL
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red")  # Add 1:1 line
METRIC_scatter
########################
# METRIC
METRIC_scatter <- ggplot(df, aes(x = SEBAL, y = METRIC)) +
geom_bin2d(bins = 900) +
scale_fill_viridis(option = "plasma") +
theme_bw() +
labs(x = "SEBAL",       # Set x-axis label to the column name of x-data
y = "METRIC",       # Set y-axis label to the column name of y-data
fill = "Count",              # Set legend title to "Count"
title = paste("SEBAL ~ METRIC", date_met)) +  # Set plot title
coord_cartesian(xlim = c(0, max_val_METRIC), ylim = c(0, max_val_METRIC)) +  # Set axis limits AUTOMATICAL
#coord_cartesian(xlim = c(0, 9), ylim = c(0, 9)) +                             # Set axis limits MANUAL
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red")  # Add 1:1 line
METRIC_scatter
########################
# METRIC
METRIC_scatter <- ggplot(df, aes(x = SEBAL, y = METRIC)) +
geom_bin2d(bins = 900) +
scale_fill_viridis(option = "plasma") +
theme_bw() +
labs(x = "SEBAL",       # Set x-axis label to the column name of x-data
y = "METRIC",       # Set y-axis label to the column name of y-data
fill = "Count",              # Set legend title to "Count"
title = paste("SEBAL ~ METRIC", date_met)) +  # Set plot title
#coord_cartesian(xlim = c(0, max_val_METRIC), ylim = c(0, max_val_METRIC)) +  # Set axis limits AUTOMATICAL
coord_cartesian(xlim = c(0, 6), ylim = c(0, 6)) +                             # Set axis limits MANUAL
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red")  # Add 1:1 line
METRIC_scatter
ggsave(METRIC_scatter, filename = paste(path_plots, "/METRIC_scatter.png"))
########################
# WASIM
WASIM_scatter <- ggplot(df, aes(x = SEBAL, y = WASIM)) +
geom_bin2d(bins = 650) +
scale_fill_viridis(option = "plasma") +
theme_bw() +
labs(x = "SEBAL",       # Set x-axis label to the column name of x-data
y = "WASIM",       # Set y-axis label to the column name of y-data
fill = "Count",              # Set legend title to "Count"
title = paste("SEBAL ~ WASIM", date_met)) +  # Set plot title
coord_cartesian(xlim = c(0, max_val_WASIM), ylim = c(0, max_val_WASIM)) +  # Set axis limits AUTOMATICAL
#coord_cartesian(xlim = c(0, 4), ylim = c(0, 4)) +                           # Set axis limits MANUAL
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red")  # Add 1:1 line
WASIM_scatter
ggsave(WASIM_scatter, filename = paste(path_plots, "/WASIM_scatter.png"))
## DATES
date_list = c("2015-04-15",
"2015-07-04",
"2016-09-08",
"2016-09-24",
"2017-04-20",
"2018-04-07",
"2018-09-30",
"2019-06-29",
"2020-03-27",
"2020-09-19")
# Set date(s) of modeling/data retrieval
# date <- "2015-07-04"  # Initial LS Picture
date <- date_list[9]
date <- as.Date(date, format = "%Y-%m-%d")
# Date in meteo_raster_daily Path Format
date_met <- format(date, "%Y-%m-%d")
# Date in WASIM-Raster Path Format
date_wasim <- format(date, "%Y_%m_%d") %>%
str_replace_all("_0", "_") %>%
str_replace_all("_", "_")
# Date in ETp-FAO56-Raster Path Format
date_etp <- format(date, "%Y_%m_%d") %>%
str_replace_all("_0", "-") %>%
str_replace_all("_", "-")
# Date SSEB Format
date_SSEB <- format(date, "%Y_%m_%d") %>%
str_replace_all("-", "_")
# Date in Landsat Path Format
date_LS <- format(date, "%Y%m%d")
### LOAD DATA
path_data = "D:/Nicolas_D/Geodaten/Masterarbeit/DATA_MesoHyd_MA-SEBAL/" # Path data NICOLAS-PC
path_combined_data = paste(path_data, "Processed/export/combined_data/combined_", date_SSEB, ".csv", sep = "")
# Check if the combined CSV file already exists, else source the code to create a combined dataframe
if (file.exists(path_combined_data)) {
df <- read.csv(path_combined_data)
} else {
source("combine_data.R")
df <- read.csv(path_combined_data)
}
### LOAD DATA
path_data = "D:/Nicolas_D/Geodaten/Masterarbeit/DATA_MesoHyd_MA-SEBAL/" # Path data NICOLAS-PC
path_combined_data = paste(path_data, "Processed/export/combined_data/combined_", date_SSEB, ".csv", sep = "")
# Check if the combined CSV file already exists, else source the code to create a combined dataframe
if (file.exists(path_combined_data)) {
df <- read.csv(path_combined_data)
} else {
source("combine_data_ohneSSEB.R")
df <- read.csv(path_combined_data)
}
### PLOTS
path_plots = paste(path_data, "Processed/export/R_plots/", date_SSEB, sep="")
# Find maximum value of all four models to scale the colour gradient to the overall maximum
df_max <- df[, c("SEBAL", "METRIC", "WASIM")]
lapply(df_max, max, na.rm=TRUE)
max_val = max(df_max, na.rm = TRUE)
# Find max and min for Difference Rasters
df_diff = df[,c("diff_METRIC", "diff_WASIM")]
diff_limits = c(min(df_diff, na.rm = TRUE), max(df_diff, na.rm = TRUE))
########################################
# SEBAL
SEBAL_raster <- ggplot(df, aes(x = x, y = y, fill = SEBAL)) +
geom_raster() +
scale_fill_viridis(option = "turbo", na.value = "transparent", direction = -1, limits = c(0, max_val)) +  # Inverse color fill gradient
theme_bw() +
coord_equal() +
labs(title = paste("SEBAL", date_met),
fill = "ETa (mm)") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
plot.margin = unit(c(0, 0, 0, 0), "cm"),  # Remove space around the figure
axis.title = element_blank())  # Remove axis Label
ggsave(SEBAL_raster, filename = paste(path_plots, "/SEBAL_raster.png"))
########################################
# METRIC
METRIC_raster <- ggplot(df, aes(x = x, y = y, fill = METRIC)) +
geom_raster() +
scale_fill_viridis(option="turbo", na.value = "transparent", direction = -1, limits = c(0, max_val)) +  # Inverse color fill gradient
theme_bw() +
coord_equal() +
labs(title = paste("METRIC", date_met),
fill = "ETa (mm)") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
plot.margin = unit(c(0, 0, 0, 0), "cm"),  # Remove space around the figure
axis.title = element_blank())  # Remove axis Label
ggsave(METRIC_raster, filename = paste(path_plots, "/METRIC_raster.png"))
METRIC_diff <- ggplot(df, aes(x = x, y = y, fill = diff_METRIC)) +
geom_raster() +
scale_fill_scico(palette = "vik", na.value = "transparent", midpoint = 0, limits = c(diff_limits[1], diff_limits[2])) +
theme_bw() +
coord_equal() +
labs(title = paste("Difference SEBAL-METRIC", date_met),
fill = "ETa (mm)") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
plot.margin = unit(c(0, 0, 0, 0), "cm"),  # Remove space around the figure
axis.title = element_blank())  # Remove axis Label
ggsave(METRIC_diff, filename = paste(path_plots, "/METRIC_diff.png"))
########################################
# WASIM
WASIM_raster <- ggplot(df, aes(x = x, y = y, fill = WASIM)) +
geom_raster() +
scale_fill_viridis(option="turbo", na.value = "transparent", direction = -1, limits = c(0, max_val)) +  # Inverse color fill gradient
theme_bw() +
coord_equal() +
labs(title = paste("WASIM", date_met),
fill = "ETa (mm)") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
plot.margin = unit(c(0, 0, 0, 0), "cm"),  # Remove space around the figure
axis.title = element_blank())  # Remove axis Label
ggsave(WASIM_raster, filename = paste(path_plots, "/WASIM_raster.png"))
WASIM_diff <- ggplot(df, aes(x = x, y = y, fill = diff_WASIM)) +
geom_raster() +
scale_fill_scico(palette = "vik", na.value = "transparent", midpoint = 0, limits = c(diff_limits[1], diff_limits[2])) +
theme_bw() +
coord_equal() +
labs(title = paste("Difference SEBAL-WASIM", date_met),
fill = "ETa (mm)") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
plot.margin = unit(c(0, 0, 0, 0), "cm"),  # Remove space around the figure
axis.title = element_blank())  # Remove axis Label
ggsave(WASIM_diff, filename = paste(path_plots, "/WASIM_diff.png"))
date_list = c("2015-04-15",
"2015-07-04",
"2016-09-08",
"2016-09-24",
"2017-04-20",
"2018-04-07",
"2018-09-30",
"2019-06-29",
"2020-03-27",
"2020-09-19")
# Set date(s) of modeling/data retrieval
# date <- "2015-07-04"  # Initial LS Picture
date <- date_list[9]
date <- as.Date(date, format = "%Y-%m-%d")
# Date in meteo_raster_daily Path Format
date_met <- format(date, "%Y-%m-%d")
# Date in WASIM-Raster Path Format
date_wasim <- format(date, "%Y_%m_%d") %>%
str_replace_all("_0", "_") %>%
str_replace_all("_", "_")
# Date in ETp-FAO56-Raster Path Format
date_etp <- format(date, "%Y_%m_%d") %>%
str_replace_all("_0", "-") %>%
str_replace_all("_", "-")
# Date SSEB Format
date_SSEB <- format(date, "%Y_%m_%d") %>%
str_replace_all("-", "_")
# Date in Landsat Path Format
date_LS <- format(date, "%Y%m%d")
### LOAD DATA
path_data = "D:/Nicolas_D/Geodaten/Masterarbeit/DATA_MesoHyd_MA-SEBAL/" # Path data NICOLAS-PC
path_combined_data = paste(path_data, "Processed/export/combined_data/combined_", date_SSEB, ".csv", sep = "")
# Check if the combined CSV file already exists, else source the code to create a combined dataframe
if (file.exists(path_combined_data)) {
df <- read.csv(path_combined_data)
} else {
source("combine_data_ohneSSEB.R")
df <- read.csv(path_combined_data)
}
### PLOTS
path_plots = paste(path_data, "Processed/export/R_plots/", date_SSEB, sep="")
# Number of bins with sqrt(n)
sqrt(length(na.omit(df$SEBAL)))
sqrt(length(na.omit(df$WASIM)))
# Maximum Limit of Plot axis
lapply(df_max, max, na.rm=TRUE)
df_max_METRIC <- df[, c("SEBAL", "METRIC")]
max_val_METRIC <-  max(df_max_METRIC , na.rm = TRUE)
df_max_WASIM <- df[, c("SEBAL", "WASIM")]
max_val_WASIM <-  max(df_max_WASIM, na.rm = TRUE)
### SCATTERPLOT  # 2D Hist/Density scatter
########################
# METRIC
METRIC_scatter <- ggplot(df, aes(x = SEBAL, y = METRIC)) +
geom_bin2d(bins = 900) +
scale_fill_viridis(option = "plasma") +
theme_bw() +
labs(x = "SEBAL",       # Set x-axis label to the column name of x-data
y = "METRIC",       # Set y-axis label to the column name of y-data
fill = "Count",              # Set legend title to "Count"
title = paste("SEBAL ~ METRIC", date_met)) +  # Set plot title
#coord_cartesian(xlim = c(0, max_val_METRIC), ylim = c(0, max_val_METRIC)) +  # Set axis limits AUTOMATICAL
coord_cartesian(xlim = c(0, 6), ylim = c(0, 6)) +                             # Set axis limits MANUAL
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red")  # Add 1:1 line
METRIC_scatter
########################
# METRIC
METRIC_scatter <- ggplot(df, aes(x = SEBAL, y = METRIC)) +
geom_bin2d(bins = 900) +
scale_fill_viridis(option = "plasma") +
theme_bw() +
labs(x = "SEBAL",       # Set x-axis label to the column name of x-data
y = "METRIC",       # Set y-axis label to the column name of y-data
fill = "Count",              # Set legend title to "Count"
title = paste("SEBAL ~ METRIC", date_met)) +  # Set plot title
coord_cartesian(xlim = c(0, max_val_METRIC), ylim = c(0, max_val_METRIC)) +  # Set axis limits AUTOMATICAL
#coord_cartesian(xlim = c(0, 6), ylim = c(0, 6)) +                             # Set axis limits MANUAL
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red")  # Add 1:1 line
METRIC_scatter
ggsave(METRIC_scatter, filename = paste(path_plots, "/METRIC_scatter.png"))
a
########################
# WASIM
WASIM_scatter <- ggplot(df, aes(x = SEBAL, y = WASIM)) +
geom_bin2d(bins = 650) +
scale_fill_viridis(option = "plasma") +
theme_bw() +
labs(x = "SEBAL",       # Set x-axis label to the column name of x-data
y = "WASIM",       # Set y-axis label to the column name of y-data
fill = "Count",              # Set legend title to "Count"
title = paste("SEBAL ~ WASIM", date_met)) +  # Set plot title
coord_cartesian(xlim = c(0, max_val_WASIM), ylim = c(0, max_val_WASIM)) +  # Set axis limits AUTOMATICAL
#coord_cartesian(xlim = c(0, 4), ylim = c(0, 4)) +                           # Set axis limits MANUAL
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red")  # Add 1:1 line
WASIM_scatter
ggsave(WASIM_scatter, filename = paste(path_plots, "/WASIM_scatter.png"))
