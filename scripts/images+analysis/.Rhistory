x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~name, scales = "free_y", nrow = 4)
# Four Subplots
ggplot(pivot_df, aes(x = date, y = mean, color = name, group = name)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 0.2,
position = position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~name, scales = "free_y", nrow = 4) +
scale_x_continuous(limits = c(0, 8))
# Four Subplots
ggplot(pivot_df, aes(x = date, y = mean, color = name, group = name)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 0.2,
position = position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~name, scales = "free_y", nrow = 4) +
scale_x(limits = c(0, 8))
# Four Subplots
ggplot(pivot_df, aes(x = date, y = mean, color = name, group = name)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 0.2,
position = position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~name, scales = "free_y", nrow = 4) +
xlim(8)
# Four Subplots
ggplot(pivot_df, aes(x = date, y = mean, color = name, group = name)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 0.2,
position = position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~name, scales = "free_y", nrow = 4) +
xlim(0,8)
# Four Subplots
ggplot(pivot_df, aes(x = date, y = mean, color = name, group = name)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 0.2,
position = position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~name, scales = "free_y", nrow = 4) +
scale_y_continuous(limits = c(0, 8))
# Four Subplots
ggplot(pivot_df, aes(x = date, y = mean, color = name, group = name)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 0.2,
position = position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~name, scales = "free_y", nrow = 4, dir = "v") +
scale_y_continuous(limits = c(0, 8))
# All in one Plot, Bars
p<- ggplot(pivot_df, aes(x=date, y=mean, fill=name)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(.9))
print(p)
# All in one Plot, Points
ggplot(pivot_df, aes(x = date, y = mean, color = name, group = name)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(pivot_df, aes(x = date, y = mean, fill = name, group = name)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), position = position_dodge(0.7), width = 0.25) +
labs(title = "Bar Plot with Error Bars of Values Over Time",
x = "Date",
y = "Value",
fill = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~name, scales = "free_y", nrow = 4) +
scale_y_continuous(limits = c(0, 8))
# All in one Plot, Points
ggplot(pivot_df, aes(x = date, y = mean, color = name, group = name)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
LU = read.csv(path_LU)
View(LU)
SEBAL_ts = data.frame(x = `2015-04-15`$x, y = `2015-04-15`$y, LandUse = LU$values)
SSEB_ts = data.frame(x = `2015-04-15`$x, y = `2015-04-15`$y, LandUse = LU$values)
METRIC_ts = data.frame(x = `2015-04-15`$x, y = `2015-04-15`$y, LandUse = LU$values)
WASIM_ts = data.frame(x = `2015-04-15`$x, y = `2015-04-15`$y, LandUse = LU$values)
for (i in data_frames_list) {
# Append columns to respective data frames
SEBAL_ts <- cbind(SEBAL_ts, i$SEBAL)
SSEB_ts <- cbind(SSEB_ts, i$SSEB)
METRIC_ts <- cbind(METRIC_ts, i$METRIC)
WASIM_ts <- cbind(WASIM_ts, i$WASIM)
}
columns = c("x", "y", "LandUse",
"2015-04-15",
"2015-07-04",
"2016-09-08",
"2016-09-24",
"2017-04-20",
"2018-04-07",
"2018-09-30",
"2019-06-29",
"2020-03-27",
"2020-09-19")
colnames(SEBAL_ts) <- columns
colnames(SSEB_ts) <- columns
colnames(METRIC_ts) <- columns
colnames(WASIM_ts) <- columns
SEBAL_ts
View(SEBAL_ts)
means_SEBAL <- apply(SEBAL_ts[, 4:13], 2, mean, na.rm = TRUE)
means_SSEB <- apply(SSEB_ts[, 4:13], 2, mean, na.rm = TRUE)
means_METRIC <- apply(METRIC_ts[, 4:13], 2, mean, na.rm = TRUE)
means_WASIM <- apply(WASIM_ts[, 4:13], 2, mean, na.rm = TRUE)
sds_SEBAL <- apply(SEBAL_ts[, 4:13], 2, sd, na.rm = TRUE)
sds_SSEB <- apply(SSEB_ts[, 4:13], 2, sd, na.rm = TRUE)
sds_METRIC <- apply(METRIC_ts[, 4:13], 2, sd, na.rm = TRUE)
sds_WASIM <- apply(WASIM_ts[, 4:13], 2, sd, na.rm = TRUE)
View(SEBAL_ts)
###############
###############
### CALCULATE MEANS and SD PER LAND USE
aggregate(SEBAL_ts, list(SEBAL_ts$LandUse, mean))
###############
###############
### CALCULATE MEANS and SD PER LAND USE
aggregate(SEBAL_ts, list(SEBAL_ts$LandUse), mean)
###############
###############
### CALCULATE MEANS and SD PER LAND USE
aggregate(SEBAL_ts[, 4:13], list(SEBAL_ts$LandUse), mean, na.rm=TRUE)
###############
###############
### CALCULATE MEANS and SD PER LAND USE
LUm_SEBAL <- aggregate(SEBAL_ts[, 4:13], list(SEBAL_ts$LandUse), mean, na.rm=TRUE)
LUm_SSEB <- aggregate(SSEB_ts[, 4:13], list(SSEB_ts$LandUse), mean, na.rm=TRUE)
LUm_METRIC <- aggregate(METRIC_ts[, 4:13], list(METRIC_ts$LandUse), mean, na.rm=TRUE)
LUm_WASIM <- aggregate(WASIM_ts[, 4:13], list(WASIM_ts$LandUse), mean, na.rm=TRUE)
LUsd_SEBAL <- aggregate(SEBAL_ts[, 4:13], list(SEBAL_ts$LandUse), sd, na.rm=TRUE)
LUsd_SSEB <- aggregate(SSEB_ts[, 4:13], list(SSEB_ts$LandUse), sd, na.rm=TRUE)
LUsd_METRIC <- aggregate(METRIC_ts[, 4:13], list(METRIC_ts$LandUse), sd, na.rm=TRUE)
LUsd_WASIM <- aggregate(WASIM_ts[, 4:13], list(WASIM_ts$LandUse), sd, na.rm=TRUE)
means_df = data.frame("date" = date_list)
means_df = cbind(means_df, LUm_SEBAL)
means_df = cbind(means_df, LUm_SSEB)
means_df = cbind(means_df, LUm_METRIC)
means_df = cbind(means_df, LUm_WASIM)
means_df
View(means_df)
View(LUsd_WASIM)
View(LUm_SEBAL)
pivot_longer(LUm_SEBAL, cols = 2:11)
View(pivot_longer(LUm_SEBAL, cols = 2:11))
test = cbind(test, "model" = c("SEBAL"))
test = pivot_longer(LUm_SEBAL, cols = 2:11)
test = cbind(test, "model" = c("SEBAL"))
View(test)
colnames(test) = c("LandUse", "date", "mean", "model")
View(test)
###############
###############
### CALCULATE MEANS and SD PER LAND USE
LUm_SEBAL <- aggregate(SEBAL_ts[, 4:13], list(SEBAL_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11)
View(LUm_SEBAL)
###############
###############
### CALCULATE MEANS and SD PER LAND USE
LUm_SEBAL <- aggregate(SEBAL_ts[, 4:13], list(SEBAL_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SEBAL")) %>%
colnames(.) = c("LandUse", "date", "mean", "model")
###############
###############
### CALCULATE MEANS and SD PER LAND USE
LUm_SEBAL <- aggregate(SEBAL_ts[, 4:13], list(SEBAL_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SEBAL"))
View(LUm_SEBAL)
LUm_SEBAL <- aggregate(SEBAL_ts[, 4:13], list(SEBAL_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SEBAL"))
LUm_SSEB <- aggregate(SSEB_ts[, 4:13], list(SSEB_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SSEB"))
LUm_METRIC <- aggregate(METRIC_ts[, 4:13], list(METRIC_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("METRIC"))
LUm_WASIM <- aggregate(WASIM_ts[, 4:13], list(WASIM_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("WASIM"))
LUsd_SEBAL <- aggregate(SEBAL_ts[, 4:13], list(SEBAL_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SEBAL"))
LUsd_SSEB <- aggregate(SSEB_ts[, 4:13], list(SSEB_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SSEB"))
LUsd_METRIC <- aggregate(METRIC_ts[, 4:13], list(METRIC_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("METRIC"))
LUsd_WASIM <- aggregate(WASIM_ts[, 4:13], list(WASIM_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("WASIM"))
View(LUm_SEBAL)
LU_tables <- c(LUm_SEBAL, LUm_SSEB, LUm_METRIC, LUm_WASIM, LUsd_SEBAL, LUsd_SSEB, LUsd_METRIC, LUsd_WASIM)
for(df in LU_tables) {
df.tmp <- get(df)
names(df.tmp) <- c("LandUse", "date", "mean", "model")
assign(df, df.tmp)
}
LU_tables <- c("LUm_SEBAL", "LUm_SSEB", "LUm_METRIC", "LUm_WASIM", "LUsd_SEBAL", "LUsd_SSEB", "LUsd_METRIC", "LUsd_WASIM")
for(df in LU_tables) {
df.tmp <- get(df)
names(df.tmp) <- c("LandUse", "date", "mean", "model")
assign(df, df.tmp)
}
View(LUm_SEBAL)
LU_mean <- c("LUm_SEBAL", "LUm_SSEB", "LUm_METRIC", "LUm_WASIM")
LU_sd <- c("LUsd_SEBAL", "LUsd_SSEB", "LUsd_METRIC", "LUsd_WASIM")
for(df in LU_mean) {
df.tmp <- get(df)
names(df.tmp) <- c("LandUse", "date", "mean", "model")
assign(df, df.tmp)
}
for(df in LU_sd) {
LUm_SEBAL <- aggregate(SEBAL_ts[, 4:13], list(SEBAL_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SEBAL"))
LUm_SSEB <- aggregate(SSEB_ts[, 4:13], list(SSEB_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SSEB"))
LUm_METRIC <- aggregate(METRIC_ts[, 4:13], list(METRIC_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("METRIC"))
LUm_WASIM <- aggregate(WASIM_ts[, 4:13], list(WASIM_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("WASIM"))
LUsd_SEBAL <- aggregate(SEBAL_ts[, 4:13], list(SEBAL_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SEBAL"))
LUsd_SSEB <- aggregate(SSEB_ts[, 4:13], list(SSEB_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SSEB"))
LUsd_METRIC <- aggregate(METRIC_ts[, 4:13], list(METRIC_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("METRIC"))
LUsd_WASIM <- aggregate(WASIM_ts[, 4:13], list(WASIM_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("WASIM"))
LU_mean <- c("LUm_SEBAL", "LUm_SSEB", "LUm_METRIC", "LUm_WASIM")
LU_sd <- c("LUsd_SEBAL", "LUsd_SSEB", "LUsd_METRIC", "LUsd_WASIM")
LUm_SEBAL <- aggregate(SEBAL_ts[, 4:13], list(SEBAL_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SEBAL"))
LUm_SSEB <- aggregate(SSEB_ts[, 4:13], list(SSEB_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SSEB"))
LUm_METRIC <- aggregate(METRIC_ts[, 4:13], list(METRIC_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("METRIC"))
LUm_WASIM <- aggregate(WASIM_ts[, 4:13], list(WASIM_ts$LandUse), mean, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("WASIM"))
LUsd_SEBAL <- aggregate(SEBAL_ts[, 4:13], list(SEBAL_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SEBAL"))
LUsd_SSEB <- aggregate(SSEB_ts[, 4:13], list(SSEB_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("SSEB"))
LUsd_METRIC <- aggregate(METRIC_ts[, 4:13], list(METRIC_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("METRIC"))
LUsd_WASIM <- aggregate(WASIM_ts[, 4:13], list(WASIM_ts$LandUse), sd, na.rm=TRUE) %>%
pivot_longer(., cols = 2:11) %>%
cbind(., "model" = c("WASIM"))
LU_mean <- c("LUm_SEBAL", "LUm_SSEB", "LUm_METRIC", "LUm_WASIM")
LU_sd <- c("LUsd_SEBAL", "LUsd_SSEB", "LUsd_METRIC", "LUsd_WASIM")
for(df in LU_mean) {
df.tmp <- get(df)
names(df.tmp) <- c("LandUse", "date", "mean", "model")
assign(df, df.tmp)
}
for(df in LU_sd) {
df.tmp <- get(df)
names(df.tmp) <- c("LandUse", "date", "sd", "model")
assign(df, df.tmp)
}
View(LUsd_WASIM)
View(means_df)
combined_table <- bind_rows(LUm_SEBAL, LUm_SSEB, LUm_METRIC, LUm_WASIM)
View(combined_table)
LU_mean_combined <- bind_rows(LUm_SEBAL, LUm_SSEB, LUm_METRIC, LUm_WASIM)
LU_sd_combined <- bind_rows(LUsd_SEBAL, LUsd_SSEB, LUsd_METRIC, LUsd_WASIM)
View(LU_mean_combined)
View(LU_sd_combined)
LU_pivot_df = cbind(LU_mean_combined, LU_sd_combined$sd)
View(LU_pivot_df)
colnames(pivot_df) = c("LandUse", "date", "mean", "model", "sd")
colnames(LU_pivot_df) = c("LandUse", "date", "mean", "model", "sd")
View(LU_pivot_df)
LU_pivot_df = LU_pivot_df %>% select("date", "LandUse", "model", "mean", "sd")
LU_pivot_df2 = LU_pivot_df %>% select("date", "LandUse", "model", "mean", "sd")
LU_pivot_df = LU_pivot_df %>% select(date, LandUse, model, mean, sd)
select(LU_pivot_df, date, LandUse, model, mean, sd)
LU_pivot_df = LU_pivot_df %>% select(1, 2, 3, 4, 5)
LU_pivot_df = LU_pivot_df[,c(1, 2, 3, 4, 5)]
LU_pivot_df = LU_pivot_df[,c(2, 4, 1, 3, 5)]
# Factor 1 - Agri
LU_pivot_df %>%
select(LandUse == 1)
# Factor 1 - Agri
LU_pivot_df %>%
filter(LandUse == 1)
# Factor 1 - Agri
LU_pivot_df %>%
filter(LandUse == 1) %>%
ggplot(pivot_df, aes(x = date, y = mean, color = name, group = name)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Factor 1 - Agri
LU_pivot_df %>%
filter(LandUse == 1) %>%
ggplot(aes(x = date, y = mean, color = name, group = name)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Factor 1 - Agri
LU_pivot_df %>%
filter(LandUse == 1) %>%
ggplot(aes(x = date, y = mean, color = model)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Factor 1 - Agri
LU_pivot_df %>%
filter(LandUse == 2) %>%
ggplot(aes(x = date, y = mean, color = model)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
LU_pivot_df %>%
filter(LandUse %in% 1:5) %>%
ggplot(aes(x = date, y = mean, color = model)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~LandUse, scales = "free_y", nrow = 1)
# All Factors - 5 Subplots
LU_pivot_df %>%
filter(LandUse %in% 1:5) %>%
ggplot(aes(x = date, y = mean, color = model)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~LandUse, scales = "free_y", ncol = 1)
# All Factors - 5 Subplots
LU_pivot_df %>%
filter(LandUse %in% 1:5) %>%
ggplot(aes(x = date, y = mean, color = model, group = name)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~LandUse, scales = "free_y", ncol = 1)
# All Factors - 5 Subplots
LU_pivot_df %>%
filter(LandUse %in% 1:5) %>%
ggplot(aes(x = date, y = mean, color = model, group = model)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~LandUse, scales = "free_y", ncol = 1)
# Add Land Use names for eacht factor
LU_names <- c("Agriculture", "Bare Soil", "Grassland", "Urban Area", "Forest")
# All Factors - 5 Subplots
LU_pivot_df %>%
filter(LandUse %in% 1:5) %>%
ggplot(aes(x = date, y = mean, color = model, group = model)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~LandUse, scales = "free_y", ncol = 1, labeller = labeller(LandUse = setNames(factor_names, 1:5)))
# All Factors - 5 Subplots
LU_pivot_df %>%
filter(LandUse %in% 1:5) %>%
ggplot(aes(x = date, y = mean, color = model, group = model)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(0.05)) +
labs(title = "Line Plot of Values Over Time",
x = "Date",
y = "Value",
color = "Name") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~LandUse, scales = "free_y", ncol = 1, labeller = labeller(LandUse = setNames(LU_names, 1:5)))
